version: "3"
services:
  geth-bootnode:
    hostname: geth-bootnode
    environment:
      - nodekeyhex=08f0e1dee5c1b4645f3331a566009e41a4514b6cd28656d63d0449ecf812812b #Needs to be fix, so that the miners know the resulting enode id
    build:
      context: ./bootnode
    image: img_bootnode
    container_name: geth-bootnode
    ports:
      - 30301:30301/udp
    networks:
      chainnet:
        ipv4_address: 172.25.0.101 # The miners need to know the IP address later on

  geth-dev-miner-1:
    hostname: geth-dev-miner-1
    depends_on:
      - geth-bootnode
    environment:
      - address=0xF837F945733a512A087866462B2a4b82FED11146 #derived from the private key which is passed in the args
      - bootnodeId=76a8171707eca17647a47ca99ffd348927dfa60102792ea349a25d5192e61855be83b786e376276a306afcceea4ffd1c9c77e4370b417efc39f328a0d068004c #derived from the nodekeyhex of the bootnode
      - bootnodeIp=172.25.0.101
    build:
      context: ../
      dockerfile: ./dev/miner/Dockerfile
      args:
        privatekey: CAB57E606531AF83BFD023F55E1673713DA7E161D2612570A0ABAAA9507AACDF # Please don't do something like this in production, okay?
        password: your_pass
        needRestore: $needRestore
    image: img_miner1
    container_name: geth-miner-1
    volumes:
      - ~/eth-data/miner/ethash:/root/.ethash
      - ~/eth-data/miner/ethereum/geth:/root/.ethereum/geth
      - ~/eth-data/miner/ethereum/keystore:/root/.ethereum/keystore
    networks:
      chainnet:
        ipv4_address: 172.25.0.102 # The monitor needs to know this address

  geth-dev-node:
    hostname: geth-dev-node
    depends_on:
      - geth-bootnode
    environment:
      - address=0xF837F945733a512A087866462B2a4b82FED11146 #derived from the private key which is passed in the args
      - bootnodeId=76a8171707eca17647a47ca99ffd348927dfa60102792ea349a25d5192e61855be83b786e376276a306afcceea4ffd1c9c77e4370b417efc39f328a0d068004c #derived from the nodekeyhex of the bootnode
      - bootnodeIp=172.25.0.101
    build:
      context: ../
      dockerfile: ./dev/node/Dockerfile
      args:
        privatekey: CAB57E606531AF83BFD023F55E1673713DA7E161D2612570A0ABAAA9507AACDF
        password: your_pass
        needRestore: $needRestore
    image: img_node
    container_name: geth-node
    ports:
      - 8545:8545
    healthcheck:
      test: wget http://localhost:8545
      interval: 2s
      timeout: 5s
      retries: 30
    volumes:
      - ~/eth-data/node/ethash:/root/.ethash
      - ~/eth-data/node/ethereum/geth:/root/.ethereum/geth
      - ~/eth-data/node/ethereum/keystore:/root/.ethereum/keystore
    networks:
      chainnet:
        ipv4_address: 172.25.0.110

  # It will make your dev environment handle more services and not necessary.
  # You can uncomment if you want to have an overview production environment.

  #  geth-dev-swarm-1:
  #    hostname: geth-dev-swarm-1
  #    depends_on:
  #      - geth-dev-node
  #    environment:
  #      - address=0xF837F945733a512A087866462B2a4b82FED11146 #derived from the private key which is passed in the args
  #      - bootnodeId=76a8171707eca17647a47ca99ffd348927dfa60102792ea349a25d5192e61855be83b786e376276a306afcceea4ffd1c9c77e4370b417efc39f328a0d068004c #derived from the nodekeyhex of the bootnode
  #      - bootnodeIp=172.25.0.101
  #    build:
  #      context: ./swarm
  #      args:
  #        privatekey: CAB57E606531AF83BFD023F55E1673713DA7E161D2612570A0ABAAA9507AACDF
  #        password: your_pass
  #    container_name: geth-swarm-1
  #    ports:
  #      - 8500:8500
  #      - 30399:30399/udp
  ##    volumes:
  ##      - eth-data-4:/root/.ethash
  #    networks:
  #      chainnet:
  #        ipv4_address: 172.25.0.111

  geth-explorer:
    hostname: geth-explorer
    depends_on:
      - geth-dev-node
    ports:
      - 8080:8080
    build:
      context: ./explorer
    image: img_explorer
    container_name: geth-explorer
    networks:
      chainnet:
        ipv4_address: 172.25.0.125
#
#  geth-monitor-backend:
#    hostname: geth-monitor-backend
#    depends_on:
#      - geth-dev-miner-1
#      - geth-dev-miner-2
#    build:
#      context: ./monitor/backend/
#    container_name: monitor-backend
#    environment:
#      - WS_SECRET=eth-net-stats-secret
#    networks:
#      chainnet:
#
#  geth-monitor-frontend:
#    hostname: geth-monitor-frontend
#    depends_on:
#      - geth-monitor-backend
#    build:
#      context: ./monitor/frontend
#    container_name: monitor-frontend
#    environment:
#      - WS_SECRET=eth-net-stats-secret
#    ports:
#      - 3000:3000
#    networks:
#      chainnet:
#        ipv4_address: 172.25.0.103

  geth-grafana:
    image: grafana/grafana
    container_name: geth-grafana
    restart: always
    ports:
      - 3001:3000
    networks:
      chainnet:
        ipv4_address: 172.25.0.169
    volumes:
      - grafana-volume:/var/lib/grafana

  geth-influxdb:
    image: influxdb
    container_name: geth-influxdb
    restart: always
    ports:
      - 8086:8086
    networks:
    environment:
      - INFLUXDB_DB=geth 
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_USER=test 
      - INFLUXDB_USER_PASSWORD=test
    networks:
      chainnet:
        ipv4_address: 172.25.0.196
    volumes:
      - influxdb-volume:/var/lib/influxdb

networks:
  chainnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

volumes:
  grafana-volume:
    external: true
  influxdb-volume:
    external: true